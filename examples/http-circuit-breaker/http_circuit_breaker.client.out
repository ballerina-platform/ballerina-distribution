# The first two requests complete without any errors.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 200 OK
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:07:58 +0530
< server: ballerina
< content-length: 14
<
* Connection #0 to host localhost left intact
Hello World!!!

curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 200 OK
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:08:00 +0530
< server: ballerina
< content-length: 14
<
* Connection #0 to host localhost left intact
Hello World!!!

# The third request responds with a `500 Internal Server Error` because the
# mock service sends a `500` http status code when responding to every third
# request.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:08:00 +0530
< server: ballerina
< content-length: 53
<
* Connection #0 to host localhost left intact
Internal error occurred while processing the request.

# Subsequent requests fail immediately since the reset timeout period has not
# elapsed.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< content-length: 99
< server: ballerina
< date: Mon, 21 Sep 2020 17:08:02 +0530
<
* Connection #0 to host localhost left intact
Upstream service unavailable. Requests to upstream service will be suspended for 8.340 seconds.

curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< content-length: 99
< server: ballerina
< date: Mon, 21 Sep 2020 17:08:04 +0530
<
* Connection #0 to host localhost left intact
Upstream service unavailable. Requests to upstream service will be suspended for 6.079 seconds.

curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< content-length: 99
< server: ballerina
< date: Mon, 21 Sep 2020 17:08:07 +0530
<
* Connection #0 to host localhost left intact
Upstream service unavailable. Requests to upstream service will be suspended for 3.475 seconds.

# The request sent immediately after the timeout period expires, is the trial
# request. It is sent to see if the backend service is back to normal.
# If this request is successful, the circuit is set to `close` and normal
# functionality resumes.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 200 OK
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:08:12 +0530
< server: ballerina
< content-length: 14
<
* Connection #0 to host localhost left intact
Hello World!!!

# The fifth request times out because the mock service times out when
# responding to every fifth request.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< content-length: 57
< server: ballerina
< date: Mon, 21 Sep 2020 17:08:17 +0530
<
* Connection #0 to host localhost left intact
Idle timeout triggered before initiating inbound response

# Subsequent requests fail immediately since the reset timeout period has not
# elapsed.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 500 Internal Server Error
< content-type: text/plain
< content-length: 99
< server: ballerina
< date: Mon, 21 Sep 2020 17:08:22 +0530
<
* Connection #0 to host localhost left intact
Upstream service unavailable. Requests to upstream service will be suspended for 4.917 seconds.

# The request sent immediately after the timeout period expires, is the trial
# request. It is sent to see if the backend service is back to normal.
# If this request is successful, the circuit is set to `close` and normal
# functionality resumes.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 200 OK
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:08:32 +0530
< server: ballerina
< content-length: 14
<
* Connection #0 to host localhost left intact
Hello World!!!

# Since the immediate request after the timeout expired was successful, the
# requests sent after that complete normally.
curl -v http://localhost:9090/cb
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 9090 (#0)
> GET /cb HTTP/1.1
> Host: localhost:9090
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 200 OK
< content-type: text/plain
< date: Mon, 21 Sep 2020 17:08:35 +0530
< server: ballerina
< content-length: 14
<
* Connection #0 to host localhost left intact
Hello World!!!
