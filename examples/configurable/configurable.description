// Configurable variables allow configuration of module-level
// variables at the program execution. This enables initializing
// variables with values provided externally. The `configurable` keyword can
// be applied to a module-level variable declaration that contains an initializer.</br>
//
// The values for `configurable` variables can be provided through configuration files,
// CLI parameters, and environment variables.
// The precedence order for retrieving configurable values is as follows:
//
// <ul><li><strong>CLI parameters with the following format: </strong>
// ```
// -Ckey=value
// ```
// The key of a CLI parameter can be specified as,
//
// ```
// key:= [[org-name .] module-name .] variable
// ```
// The org-name and module-name is optional for the variable defined in the
// root module or single Ballerina file. Currently, CLI-based configuration
// is supported for configurable variables of types `int`, `float`, `boolean`,
// `string`, `decimal`, and `xml`.</li></br>
//
// <li><strong>Configuration files: </strong> The values can be provided through 
// configuration files in the TOML(v0.4) format. The file location can be set 
// through an environment variable with the name `BAL_CONFIG_FILES`. 
// It is possible to specify multiple configuration files using the 
// OS-specific separator. The file precedence order will be as specified 
// in the environment variable. If an environment variable is not specified, 
// it is located in the current directory with the file name `Config.toml`.</li></br>
// 
// <li><strong>Environment variables: </strong>The values can be provided through an 
// environment variable with the name `BAL_CONFIG_DATA` in which the content 
// is expected to be in the TOML(v0.4) format. Currently, TOML-based configuration
// is supported for configurable variables of `int`, `float`, `boolean`,  
// `string`, `decimal`, the arrays of the respective types, `record`, and `table`.</li></ul>
