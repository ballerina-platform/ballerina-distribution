# The two services have to be run separately to observe the following output. 
# For clarity, only the relevant parts of the HTTP trace logs have been included here.
# At the command line, navigate to the directory that contains the
# `.bal` file and execute the `bal run` command below by setting the `--b7a.http.tracelog.console=true` property to start the service.
bal run caching_proxy.bal --b7a.http.tracelog.console=true
ballerina: deploying service(s) in 'caching_proxy.bal'
ballerina: started HTTP/WS listener 0.0.0.0:9090
# The caching proxy receives a request from a client.
[2020-09-21 17:59:01,467] TRACE {http.tracelog.downstream} - [id: 0x53a49eb2, correlatedSource: n/a, host:/127.0.0.1:9090 - remote:/127.0.0.1:46904] INBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /cache HTTP/1.1
Host: localhost:9090
User-Agent: curl/7.68.0
Accept: */*

# The proxy in turn, makes a request to the backend service.
[2020-09-21 17:59:01,601] TRACE {http.tracelog.upstream} - [id: 0xd415b7e2, correlatedSource: 0x53a49eb2, host:/127.0.0.1:37422 - remote:localhost/127.0.0.1:8080] OUTBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /hello HTTP/1.1
Accept: */*
host: localhost:8080
user-agent: ballerina
connection: keep-alive

# The backend service responds with a `200 OK` and it contains `etag` and `cache-control` headers. This response can be cached and as such, the caching client caches it. As seen from the `max-age` directive of the 'cache-control` header, this response is valid for 15 seconds.
[2020-09-21 17:59:01,796] TRACE {http.tracelog.upstream} - [id: 0xd415b7e2, correlatedSource: 0x53a49eb2, host:/127.0.0.1:37422 - remote:localhost/127.0.0.1:8080] INBOUND: DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:01 +0530
content-type: application/json
cache-control: must-revalidate,public,max-age=15
content-length: 27
server: ballerina
date: Mon, 21 Sep 2020 17:59:01 +0530  
[2020-09-21 17:59:01,816] TRACE {http.tracelog.upstream} - [id: 0xd415b7e2, correlatedSource: 0x53a49eb2, host:/127.0.0.1:37422 - remote:localhost/127.0.0.1:8080] INBOUND: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 27, cap: 27/27, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 1024)), decoderResult: success), 27B
{"message":"Hello, World!"}

# The response is sent back to the client.
[2020-09-21 17:59:01,865] TRACE {http.tracelog.downstream} - [id: 0x53a49eb2, correlatedSource: n/a, host:localhost/127.0.0.1:9090 - remote:/127.0.0.1:46904] OUTBOUND: DefaultFullHttpResponse(decodeResult: success, version: HTTP/1.1, content: CompositeByteBuf(ridx: 0, widx: 27, cap: 27, components=1))
HTTP/1.1 200 OK
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:01 +0530
content-type: application/json
cache-control: must-revalidate,public,max-age=15
date: Mon, 21 Sep 2020 17:59:01 +0530
server: ballerina
content-length: 27, 27B
{"message":"Hello, World!"}

# Subsequent requests to the proxy within the next 15 seconds are served from the proxy's cache. As seen here, the backend service is not contacted.
[2020-09-21 17:59:09,970] TRACE {http.tracelog.downstream} - [id: 0xdfba8866, correlatedSource: n/a, host:/127.0.0.1:9090 - remote:/127.0.0.1:46908] INBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /cache HTTP/1.1
Host: localhost:9090
User-Agent: curl/7.68.0
Accept: */*

# Cached response.
[2020-09-21 17:59:10,002] TRACE {http.tracelog.downstream} - [id: 0xdfba8866, correlatedSource: n/a, host:localhost/127.0.0.1:9090 - remote:/127.0.0.1:46908] OUTBOUND: DefaultFullHttpResponse(decodeResult: success, version: HTTP/1.1, content: CompositeByteBuf(ridx: 0, widx: 27, cap: 27, components=1))
HTTP/1.1 200 OK
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:01 +0530
content-type: application/json
cache-control: must-revalidate,public,max-age=15
date: Mon, 21 Sep 2020 17:59:01 +0530
age: 8
server: ballerina
content-length: 27, 27B
{"message":"Hello, World!"} 

# Another request is sent after remaining idle for a while.
[2020-09-21 17:59:22,699] TRACE {http.tracelog.downstream} - [id: 0xdc97be29, correlatedSource: n/a, host:/127.0.0.1:9090 - remote:/127.0.0.1:46910] INBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /cache HTTP/1.1
Host: localhost:9090
User-Agent: curl/7.68.0
Accept: */*

# This time, the request is not served from the cache. The backend service is contacted. The `if-none-match` header sends the entity tag of the now stale response, so that the backend service may determine whether this response is still valid.
[2020-09-21 17:59:22,718] TRACE {http.tracelog.upstream} - [id: 0xd415b7e2, correlatedSource: 0xdc97be29, host:/127.0.0.1:37422 - remote:localhost/127.0.0.1:8080] OUTBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /hello HTTP/1.1
Accept: */*
if-none-match: 620328e8
if-modified-since: Mon, 21 Sep 2020 17:59:01 +0530
host: localhost:8080
user-agent: ballerina
connection: keep-alive

# The response has not changed. Therefore the backend services respond with a `304 Not Modified` response. Based on this, the proxy will refresh the response, so that it can continue serving the cached response.
[2020-09-21 17:59:22,734] TRACE {http.tracelog.upstream} - [id: 0xd415b7e2, correlatedSource: 0xdc97be29, host:/127.0.0.1:37422 - remote:localhost/127.0.0.1:8080] INBOUND: DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 304 Not Modified
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:22 +0530
cache-control: must-revalidate,public,max-age=15
content-length: 0
server: ballerina
date: Mon, 21 Sep 2020 17:59:22 +0530

# The cached response is served yet again since the response has not changed.
[2020-09-21 17:59:22,747] TRACE {http.tracelog.downstream} - [id: 0xdc97be29, correlatedSource: n/a, host:localhost/127.0.0.1:9090 - remote:/127.0.0.1:46910] OUTBOUND: DefaultFullHttpResponse(decodeResult: success, version: HTTP/1.1, content: CompositeByteBuf(ridx: 0, widx: 27, cap: 27, components=1))
HTTP/1.1 200 OK
content-type: application/json
cache-control: must-revalidate,public,max-age=15
date: Mon, 21 Sep 2020 17:59:22 +0530
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:22 +0530
age: 0
server: ballerina
content-length: 27, 27B
{"message":"Hello, World!"} 

# The output for the mock service.
bal run  hello_service.bal --b7a.http.tracelog.console=true 
ballerina: deploying service(s) in 'hello_service.bal'
ballerina: started HTTP/WS listener 0.0.0.0:8080
# For the first request that the caching proxy receives, it sends a request to the hello service.
[2020-09-21 17:59:01,679] TRACE {http.tracelog.downstream} - [id: 0x220d6a42, correlatedSource: n/a, host:/127.0.0.1:8080 - remote:/127.0.0.1:37422] INBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /hello HTTP/1.1
Accept: */*
host: localhost:8080
user-agent: ballerina
connection: keep-alive

# The service responds with a `200 OK` with the relevant caching headers set.
[2020-09-21 17:59:01,786] TRACE {http.tracelog.downstream} - [id: 0x220d6a42, correlatedSource: n/a, host:localhost/127.0.0.1:8080 - remote:/127.0.0.1:37422] OUTBOUND: DefaultFullHttpResponse(decodeResult: success, version: HTTP/1.1, content: CompositeByteBuf(ridx: 0, widx: 27, cap: 27, components=1))
HTTP/1.1 200 OK
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:01 +0530
content-type: application/json
cache-control: must-revalidate,public,max-age=15
content-length: 27
server: ballerina
date: Mon, 21 Sep 2020 17:59:01 +0530, 27B
{"message":"Hello, World!"}

# The backend service only gets another request when the cached response and the proxy have expired and it wants to validate it again.
[2020-09-21 17:59:22,722] TRACE {http.tracelog.downstream} - [id: 0x220d6a42, correlatedSource: n/a, host:localhost/127.0.0.1:8080 - remote:/127.0.0.1:37422] INBOUND: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /hello HTTP/1.1
Accept: */*
if-none-match: 620328e8
if-modified-since: Mon, 21 Sep 2020 17:59:01 +0530
host: localhost:8080
user-agent: ballerina
connection: keep-alive

# After checking the `if-none-match` header, the service determines that the response is still the same and that the proxy can keep reusing it.
[2020-09-21 17:59:22,728] TRACE {http.tracelog.downstream} - [id: 0x220d6a42, correlatedSource: n/a, host:localhost/127.0.0.1:8080 - remote:/127.0.0.1:37422] OUTBOUND: DefaultFullHttpResponse(decodeResult: success, version: HTTP/1.1, content: CompositeByteBuf(ridx: 0, widx: 0, cap: 0, components=1))
HTTP/1.1 304 Not Modified
etag: 620328e8
last-modified: Mon, 21 Sep 2020 17:59:22 +0530
cache-control: must-revalidate,public,max-age=15
content-length: 0
server: ballerina
date: Mon, 21 Sep 2020 17:59:22 +0530, 0B
