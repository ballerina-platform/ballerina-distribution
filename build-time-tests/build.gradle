/*
 ~ * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~ *
 ~ * Licensed under the Apache License, Version 2.0 (the "License");
 ~ * you may not use this file except in compliance with the License.
 ~ * You may obtain a copy of the License at
 ~ *
 ~ * http://www.apache.org/licenses/LICENSE-2.0
 ~ *
 ~ * Unless required by applicable law or agreed to in writing, software
 ~ * distributed under the License is distributed on an "AS IS" BASIS,
 ~ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ * See the License for the specific language governing permissions and
 ~ * limitations under the License.
 ~ */

description = 'Ballerina - Build Time Tests'

apply plugin: 'java'

ext.offline = "false"
def distPath = "$projectDir/../ballerina/build/target/extracted-distributions/ballerina-${version}"

configurations {
    ballerinaDistribution
}

dependencies {
    ballerinaDistribution project(path: ":ballerina", configuration: "ballerinaDistribution")
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
}

task copySamples {
    copy {
        from file("$project.projectDir/samples")
        into file("$project.projectDir/build/samples")
    }
}

task buildSamples {
    dependsOn copySamples
    dependsOn configurations.ballerinaDistribution
    dependsOn (":ballerina:unzipDistForTests")
    doLast {
        exec {
            workingDir "${buildDir}/samples"
            commandLine 'sh', '-c', "bash build-samples.sh $distPath"
        }
    }
}

task processData(type: JavaExec) {
    dependsOn buildSamples
    classpath = sourceSets.main.runtimeClasspath
    setMain('org.ballerina.packages.buildtime.GenerateBuildDataCsv')
    args "$buildDir/../../ballerina/build/distributions"
}
