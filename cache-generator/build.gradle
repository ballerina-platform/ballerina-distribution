/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: "java"
apply plugin: "com.github.johnrengelman.shadow"

configurations.all {
    resolutionStrategy.preferProjectModules()
}

configurations {
    balTools
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.13.1'
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "io.swagger.core.v3:swagger-models"
    implementation ("io.swagger.parser.v3:swagger-parser-v2-converter") {
        exclude group: "io.swagger", module: "swagger-compat-spec-parser"
        exclude group: "org.slf4j", module: "slf4j-ext"
        exclude group: "javax.validation", module: "validation-api"
    }

    implementation "javax.ws.rs:javax.ws.rs-api"
    implementation "com.github.jknack:handlebars"
    implementation "info.picocli:picocli"
    implementation "org.ballerinalang:ballerina-lang"
    implementation "org.ballerinalang:ballerina-parser"
    implementation "org.ballerinalang:formatter-core"
    implementation "org.ballerinalang:ballerina-cli"
    implementation "org.ballerinalang:ballerina-tools-api"
    implementation "io.ballerina.stdlib:http-native"
    implementation "com.google.code.findbugs:jsr305"
    testImplementation "org.testng:testng"

    balTools ("org.ballerinalang:jballerina-tools:${ballerinaLangVersion}") {
        transitive = false
    }
}
def bDistribution = file("$project.buildDir/extracted-distribution/jballerina-tools-${ballerinaLangVersion}")

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('com.github.jknack:handlebars'))
        include(dependency('org.antlr:antlr4:4.5'))
        include(dependency('io.swagger.parser.v3:swagger-parser'))
        include(dependency('com.atlassian.commonmark:commonmark'))
        include(dependency('com.atlassian.commonmark:commonmark-ext-gfm-tables'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

